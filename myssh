#!/usr/bin/env bash

dir=$(dirname $(realpath "$0"))
config_file=$dir"/config"

create() {
    if [ ! -e "$config_file" ]; then
        echo "# name username password host port" > $config_file
        echo "# example: example_server root 123456 192.168.1.101 22" >> $config_file
    fi
}

show_menu() {
    i=0
    list=()
    menu=()

    while read line; do
        if [ -z "$line" ]; then continue; fi
        if [ "${line:0:1}" = "#" ]; then continue; fi

        array=($line)
        list[$i]=$line

        desc=${array[0]}
        username=${array[1]}
        password=${array[2]}
        host=${array[3]}
        port=${array[4]}

        menu[$i]="$((i+1)) ${desc}[${username}@${host}]"

        ((i++))
    done < $config_file

    if [ ${#list[*]} -lt 1 ]; then
        return 1
    fi

    ((width=$(tput cols)/2))
    ((height=$(tput lines)/2))
    #choose=$(whiptail --menu '' --title "MySSH" 0 0 0 ${menu[*]} 3>&1 1>&2 2>&3)
    choose=$(dialog --title "MySSH" --menu "" 0 0 0 ${menu[*]} 3>&1 1>&2 2>&3)

    if [ -z "$choose" ]; then
        return 2
    else
        array=(${list[$(($choose-1))]})
        echo ${array[*]}
        return 0
    fi
}

enter() {
    array=($(show_menu))
    res=$?
    if [ $res -eq 1 ]; then
        edit
        exit 0
    elif [ $res -eq 2 ]; then
        exit 1
    fi

    desc=${array[0]}
    username=${array[1]}
    password=${array[2]}
    host=${array[3]}
    port=${array[4]}

    clear

    echo "Connect $desc($username@$host)..."
    $dir"/_ssh" $username $host $password $port
}

copy() {
    array=($(show_menu))
    res=$?
    if [ $res -eq 1 ]; then
        edit
        exit 0
    elif [ $res -eq 2 ]; then
        exit 1
    fi

    desc=${array[0]}
    username=${array[1]}
    password=${array[2]}
    host=${array[3]}
    port=${array[4]}

    #text=$(whiptail --inputbox 'Usage: ORIGIN_PATH {<<,>>} LOCAL_PATH' --title "MySSH-copy" 0 0 3>&1 1>&2 2>&3)
    text=$(dialog --title "MySSH-copy" --inputbox 'Usage: ORIGIN_PATH {<<,>>} LOCAL_PATH' 0 0 3>&1 1>&2 2>&3)

    if [ $? -ne 0 ]; then
        exit 1
    fi

    if echo $text | grep '>>' >/dev/null 2>&1; then
        origin_path=$(echo $text | awk -F '>>' '{print$1}')
        local_path=$(echo $text | awk -F '>>' '{print$2}')

        src="$username@$host:$origin_path"
        dest="$local_path"
    elif echo $text | grep '<<' >/dev/null 2>&1; then
        origin_path=$(echo $text | awk -F '<<' '{print$1}')
        local_path=$(echo $text | awk -F '<<' '{print$2}')

        src="$local_path"
        dest="$username@$host:$origin_path"
    else
        echo "Illegal input"
        exit 1
    fi

    $dir"/_scp" $password $port $src $dest
}

edit() {
    vi $config_file
}

add() {
    if [ $# -gt 0 ]; then
        echo "$*" >> $config_file
    else
        read -p 'name: ' name
        read -p 'username: ' username
        read -sp 'password: ' password
        echo
        read -p 'host: ' host
        read -p 'port (default 22): ' port

        echo "$name $username $password $host ${port:-22}" >> $config_file
    fi
}

list() {
    if [ -n "$1" ]; then
        cat $config_file
    else
        cat $config_file | awk '{for(i=1;i<=NF;++i)if($0!~/^\s*#/&&i==3)printf"****** ";else printf$i" ";print""}'
    fi
}

show_help() {
    cat <<EOF
usage myssh [-h] [-l] [-L] [-e] [-c]
            [-a [NAME USERNAME PASSWORD HOST PORT]]

options:
    -h  print help
    -l  print config file
    -L  print config file and show password
    -e  edit config file
    -c  copy file
    -a  add a session
EOF
    exit 1
}

create
case $1 in
    -l)
        list
        ;;
    -L)
        list show-pass
        ;;
    -e)
        edit
        ;;
    -a)
        args=($*)
        add ${args[@]:1}
        ;;
    -c)
        copy
        ;;
    "")
        enter
        ;;
    *)
        show_help
        ;;
esac

