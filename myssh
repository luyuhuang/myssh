#!/usr/bin/env bash

source=$0
while [ -h $source ]; do
    dir=$(cd -P $(dirname $source) && pwd)
    source=$(readlink $source)
    [[ $source != /* ]] && source=$dir"/"$source
done

dir="$(cd -P $(dirname $source) && pwd)"
config_file=$dir"/config"

create() {
    if [ ! -e "$config_file" ]; then
        echo "# name username password host port" > $config_file
        echo "# example: example_server root 123456 192.168.1.101 22" >> $config_file
    fi
}

show_menu() {
    i=0
    list=()
    menu=()

    while read line; do
        if [ -z "$line" ]; then continue; fi
        if [ "${line:0:1}" = "#" ]; then continue; fi

        array=($line)
        list[$i]=$line

        desc=${array[0]}
        username=${array[1]}
        password=${array[2]}
        host=${array[3]}
        port=${array[4]}

        menu[$i]="$((i+1)) ${desc}[${username}@${host}]"

        ((i++))
    done < $dir"/config"

    if [ ${#list[*]} -lt 1 ]; then
        return 1
    fi

    ((width=$(tput cols)/2))
    ((height=$(tput lines)/2))
    #choose=$(whiptail --menu '' --title "MySSH" 0 0 0 ${menu[*]} 3>&1 1>&2 2>&3)
    choose=$(dialog --title "MySSH" --menu "" 0 0 0 ${menu[*]} 3>&1 1>&2 2>&3)

    if [ -z "$choose" ]; then
        return 2
    else
        array=(${list[$(($choose-1))]})
        echo ${array[*]}
        return 0
    fi
}

enter() {
    array=($(show_menu))
    res=$?
    if [ $res -eq 1 ]; then
        edit
        exit 0
    elif [ $res -eq 2 ]; then
        exit 1
    fi

    desc=${array[0]}
    username=${array[1]}
    password=${array[2]}
    host=${array[3]}
    port=${array[4]}

    clear

    echo "Connect $desc($username@$host)..."
    $dir"/_ssh" $username $host $password $port
}

copy() {
    array=($(show_menu))
    res=$?
    if [ $res -eq 1 ]; then
        edit
        exit 0
    elif [ $res -eq 2 ]; then
        exit 1
    fi

    desc=${array[0]}
    username=${array[1]}
    password=${array[2]}
    host=${array[3]}
    port=${array[4]}

    #text=$(whiptail --inputbox 'Usage: ORIGIN_PATH {<<,>>} LOCAL_PATH' --title "MySSH-copy" 0 0 3>&1 1>&2 2>&3)
    text=$(dialog --title "MySSH-copy" --inputbox 'Usage: ORIGIN_PATH {<<,>>} LOCAL_PATH' 0 0 3>&1 1>&2 2>&3)

    if [ $? -ne 0 ]; then
        exit 1
    fi

    if echo $text | grep '>>' >/dev/null 2>&1; then
        origin_path=$(echo $text | awk -F '>>' '{print$1}')
        local_path=$(echo $text | awk -F '>>' '{print$2}')

        src="$username@$host:$origin_path"
        dest="$local_path"
    elif echo $text | grep '<<' >/dev/null 2>&1; then
        origin_path=$(echo $text | awk -F '<<' '{print$1}')
        local_path=$(echo $text | awk -F '<<' '{print$2}')
        
        src="$local_path"
        dest="$username@$host:$origin_path"
    else
        echo "Illegal input"
        exit 1
    fi

    $dir"/_scp" $password $port $src $dest
}

edit() {
    vi $config_file
}

list() {
    cat $config_file
}

show_help() {
    cat <<EOF
usage myssh [-h][-l][-e][-c]

options:
    -h  print help
    -l  print config file
    -e  edit config file
    -c  copy file
EOF
}

create
case $1 in
    -h)
        show_help
        ;;
    -l)
        list
        ;;
    -e)
        edit
        ;;
    -c)
        copy
        ;;
    "")
        enter
        ;;
    *)
        show_help
        ;;
esac

